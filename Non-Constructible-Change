// O(nlogn) time | O(1) space - where n is the number of coins

#include <vector>
using namespace std;

int nonConstructibleChange(vector<int> coins) {

	if(!coins.size())
		return 1;
	
	int maxPossibleChange = 0;
	sort(coins.begin(), coins.end()); 
	
	if(coins[0] != 1)
		return 1;
	
	for(auto coin: coins) {
		if(!(coin > maxPossibleChange + 1)) 
			maxPossibleChange += coin;
		
		else
			return maxPossibleChange + 1;
	}
	
  return maxPossibleChange + 1;
}
